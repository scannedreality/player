#ifdef HAVE_OPENXR

#include "scan_studio/viewer_common/openxr/openxr.hpp"

#include <loguru.hpp>

namespace scan_studio {

bool XrCheckResult(XrResult result) {
  if (result == XR_SUCCESS) {
    return true;
  }
  
  if (result == XR_TIMEOUT_EXPIRED) { LOG(ERROR) << "OpenXR error: XR_TIMEOUT_EXPIRED"; }
  else if (result == XR_SESSION_LOSS_PENDING) { LOG(ERROR) << "OpenXR error: XR_SESSION_LOSS_PENDING"; }
  else if (result == XR_EVENT_UNAVAILABLE) { LOG(ERROR) << "OpenXR error: XR_EVENT_UNAVAILABLE"; }
  else if (result == XR_SPACE_BOUNDS_UNAVAILABLE) { LOG(ERROR) << "OpenXR error: XR_SPACE_BOUNDS_UNAVAILABLE"; }
  else if (result == XR_SESSION_NOT_FOCUSED) { LOG(ERROR) << "OpenXR error: XR_SESSION_NOT_FOCUSED"; }
  else if (result == XR_FRAME_DISCARDED) { LOG(ERROR) << "OpenXR error: XR_FRAME_DISCARDED"; }
  else if (result == XR_ERROR_VALIDATION_FAILURE) { LOG(ERROR) << "OpenXR error: XR_ERROR_VALIDATION_FAILURE"; }
  else if (result == XR_ERROR_RUNTIME_FAILURE) { LOG(ERROR) << "OpenXR error: XR_ERROR_RUNTIME_FAILURE"; }
  else if (result == XR_ERROR_OUT_OF_MEMORY) { LOG(ERROR) << "OpenXR error: XR_ERROR_OUT_OF_MEMORY"; }
  else if (result == XR_ERROR_API_VERSION_UNSUPPORTED) { LOG(ERROR) << "OpenXR error: XR_ERROR_API_VERSION_UNSUPPORTED"; }
  else if (result == XR_ERROR_INITIALIZATION_FAILED) { LOG(ERROR) << "OpenXR error: XR_ERROR_INITIALIZATION_FAILED"; }
  else if (result == XR_ERROR_FUNCTION_UNSUPPORTED) { LOG(ERROR) << "OpenXR error: XR_ERROR_FUNCTION_UNSUPPORTED"; }
  else if (result == XR_ERROR_FEATURE_UNSUPPORTED) { LOG(ERROR) << "OpenXR error: XR_ERROR_FEATURE_UNSUPPORTED"; }
  else if (result == XR_ERROR_EXTENSION_NOT_PRESENT) { LOG(ERROR) << "OpenXR error: XR_ERROR_EXTENSION_NOT_PRESENT"; }
  else if (result == XR_ERROR_LIMIT_REACHED) { LOG(ERROR) << "OpenXR error: XR_ERROR_LIMIT_REACHED"; }
  else if (result == XR_ERROR_SIZE_INSUFFICIENT) { LOG(ERROR) << "OpenXR error: XR_ERROR_SIZE_INSUFFICIENT"; }
  else if (result == XR_ERROR_HANDLE_INVALID) { LOG(ERROR) << "OpenXR error: XR_ERROR_HANDLE_INVALID"; }
  else if (result == XR_ERROR_INSTANCE_LOST) { LOG(ERROR) << "OpenXR error: XR_ERROR_INSTANCE_LOST"; }
  else if (result == XR_ERROR_SESSION_RUNNING) { LOG(ERROR) << "OpenXR error: XR_ERROR_SESSION_RUNNING"; }
  else if (result == XR_ERROR_SESSION_NOT_RUNNING) { LOG(ERROR) << "OpenXR error: XR_ERROR_SESSION_NOT_RUNNING"; }
  else if (result == XR_ERROR_SESSION_LOST) { LOG(ERROR) << "OpenXR error: XR_ERROR_SESSION_LOST"; }
  else if (result == XR_ERROR_SYSTEM_INVALID) { LOG(ERROR) << "OpenXR error: XR_ERROR_SYSTEM_INVALID"; }
  else if (result == XR_ERROR_PATH_INVALID) { LOG(ERROR) << "OpenXR error: XR_ERROR_PATH_INVALID"; }
  else if (result == XR_ERROR_PATH_COUNT_EXCEEDED) { LOG(ERROR) << "OpenXR error: XR_ERROR_PATH_COUNT_EXCEEDED"; }
  else if (result == XR_ERROR_PATH_FORMAT_INVALID) { LOG(ERROR) << "OpenXR error: XR_ERROR_PATH_FORMAT_INVALID"; }
  else if (result == XR_ERROR_PATH_UNSUPPORTED) { LOG(ERROR) << "OpenXR error: XR_ERROR_PATH_UNSUPPORTED"; }
  else if (result == XR_ERROR_LAYER_INVALID) { LOG(ERROR) << "OpenXR error: XR_ERROR_LAYER_INVALID"; }
  else if (result == XR_ERROR_LAYER_LIMIT_EXCEEDED) { LOG(ERROR) << "OpenXR error: XR_ERROR_LAYER_LIMIT_EXCEEDED"; }
  else if (result == XR_ERROR_SWAPCHAIN_RECT_INVALID) { LOG(ERROR) << "OpenXR error: XR_ERROR_SWAPCHAIN_RECT_INVALID"; }
  else if (result == XR_ERROR_SWAPCHAIN_FORMAT_UNSUPPORTED) { LOG(ERROR) << "OpenXR error: XR_ERROR_SWAPCHAIN_FORMAT_UNSUPPORTED"; }
  else if (result == XR_ERROR_ACTION_TYPE_MISMATCH) { LOG(ERROR) << "OpenXR error: XR_ERROR_ACTION_TYPE_MISMATCH"; }
  else if (result == XR_ERROR_SESSION_NOT_READY) { LOG(ERROR) << "OpenXR error: XR_ERROR_SESSION_NOT_READY"; }
  else if (result == XR_ERROR_SESSION_NOT_STOPPING) { LOG(ERROR) << "OpenXR error: XR_ERROR_SESSION_NOT_STOPPING"; }
  else if (result == XR_ERROR_TIME_INVALID) { LOG(ERROR) << "OpenXR error: XR_ERROR_TIME_INVALID"; }
  else if (result == XR_ERROR_REFERENCE_SPACE_UNSUPPORTED) { LOG(ERROR) << "OpenXR error: XR_ERROR_REFERENCE_SPACE_UNSUPPORTED"; }
  else if (result == XR_ERROR_FILE_ACCESS_ERROR) { LOG(ERROR) << "OpenXR error: XR_ERROR_FILE_ACCESS_ERROR"; }
  else if (result == XR_ERROR_FILE_CONTENTS_INVALID) { LOG(ERROR) << "OpenXR error: XR_ERROR_FILE_CONTENTS_INVALID"; }
  else if (result == XR_ERROR_FORM_FACTOR_UNSUPPORTED) { LOG(ERROR) << "OpenXR error: XR_ERROR_FORM_FACTOR_UNSUPPORTED"; }
  else if (result == XR_ERROR_FORM_FACTOR_UNAVAILABLE) { LOG(ERROR) << "OpenXR error: XR_ERROR_FORM_FACTOR_UNAVAILABLE"; }
  else if (result == XR_ERROR_API_LAYER_NOT_PRESENT) { LOG(ERROR) << "OpenXR error: XR_ERROR_API_LAYER_NOT_PRESENT"; }
  else if (result == XR_ERROR_CALL_ORDER_INVALID) { LOG(ERROR) << "OpenXR error: XR_ERROR_CALL_ORDER_INVALID"; }
  else if (result == XR_ERROR_GRAPHICS_DEVICE_INVALID) { LOG(ERROR) << "OpenXR error: XR_ERROR_GRAPHICS_DEVICE_INVALID"; }
  else if (result == XR_ERROR_POSE_INVALID) { LOG(ERROR) << "OpenXR error: XR_ERROR_POSE_INVALID"; }
  else if (result == XR_ERROR_INDEX_OUT_OF_RANGE) { LOG(ERROR) << "OpenXR error: XR_ERROR_INDEX_OUT_OF_RANGE"; }
  else if (result == XR_ERROR_VIEW_CONFIGURATION_TYPE_UNSUPPORTED) { LOG(ERROR) << "OpenXR error: XR_ERROR_VIEW_CONFIGURATION_TYPE_UNSUPPORTED"; }
  else if (result == XR_ERROR_ENVIRONMENT_BLEND_MODE_UNSUPPORTED) { LOG(ERROR) << "OpenXR error: XR_ERROR_ENVIRONMENT_BLEND_MODE_UNSUPPORTED"; }
  else if (result == XR_ERROR_NAME_DUPLICATED) { LOG(ERROR) << "OpenXR error: XR_ERROR_NAME_DUPLICATED"; }
  else if (result == XR_ERROR_NAME_INVALID) { LOG(ERROR) << "OpenXR error: XR_ERROR_NAME_INVALID"; }
  else if (result == XR_ERROR_ACTIONSET_NOT_ATTACHED) { LOG(ERROR) << "OpenXR error: XR_ERROR_ACTIONSET_NOT_ATTACHED"; }
  else if (result == XR_ERROR_ACTIONSETS_ALREADY_ATTACHED) { LOG(ERROR) << "OpenXR error: XR_ERROR_ACTIONSETS_ALREADY_ATTACHED"; }
  else if (result == XR_ERROR_LOCALIZED_NAME_DUPLICATED) { LOG(ERROR) << "OpenXR error: XR_ERROR_LOCALIZED_NAME_DUPLICATED"; }
  else if (result == XR_ERROR_LOCALIZED_NAME_INVALID) { LOG(ERROR) << "OpenXR error: XR_ERROR_LOCALIZED_NAME_INVALID"; }
  else if (result == XR_ERROR_GRAPHICS_REQUIREMENTS_CALL_MISSING) { LOG(ERROR) << "OpenXR error: XR_ERROR_GRAPHICS_REQUIREMENTS_CALL_MISSING"; }
  else if (result == XR_ERROR_ANDROID_THREAD_SETTINGS_ID_INVALID_KHR) { LOG(ERROR) << "OpenXR error: XR_ERROR_ANDROID_THREAD_SETTINGS_ID_INVALID_KHR"; }
  else if (result == XR_ERROR_ANDROID_THREAD_SETTINGS_FAILURE_KHR) { LOG(ERROR) << "OpenXR error: XR_ERROR_ANDROID_THREAD_SETTINGS_FAILURE_KHR"; }
  else if (result == XR_ERROR_CREATE_SPATIAL_ANCHOR_FAILED_MSFT) { LOG(ERROR) << "OpenXR error: XR_ERROR_CREATE_SPATIAL_ANCHOR_FAILED_MSFT"; }
  else if (result == XR_ERROR_SECONDARY_VIEW_CONFIGURATION_TYPE_NOT_ENABLED_MSFT) { LOG(ERROR) << "OpenXR error: XR_ERROR_SECONDARY_VIEW_CONFIGURATION_TYPE_NOT_ENABLED_MSFT"; }
  else if (result == XR_ERROR_CONTROLLER_MODEL_KEY_INVALID_MSFT) { LOG(ERROR) << "OpenXR error: XR_ERROR_CONTROLLER_MODEL_KEY_INVALID_MSFT"; }
  else if (result == XR_ERROR_DISPLAY_REFRESH_RATE_UNSUPPORTED_FB) { LOG(ERROR) << "OpenXR error: XR_ERROR_DISPLAY_REFRESH_RATE_UNSUPPORTED_FB"; }
  else if (result == XR_ERROR_COLOR_SPACE_UNSUPPORTED_FB) { LOG(ERROR) << "OpenXR error: XR_ERROR_COLOR_SPACE_UNSUPPORTED_FB"; }
  else { LOG(ERROR) << "OpenXR error: " << result; }
  
  return false;
}

}

#endif
