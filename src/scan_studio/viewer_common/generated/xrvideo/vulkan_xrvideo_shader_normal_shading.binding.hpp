// This file was autogenerated by shaderbind. Do not modify.
#pragma once

#include <libvis/vulkan/libvis.h>
#include <libvis/vulkan/descriptors.h>

namespace vis {
  class VulkanDescriptorSetLayout;
  class VulkanDevice;
}

namespace vulkan_xrvideo_shader_normal_shading {

struct DescriptorSet0Config {
  bool VertexUBODynamic = false;
  bool DeformationStateStorageBufferDynamic = false;
};

bool CreateDescriptorSet0Layout(vis::VulkanDescriptorSetLayout* layout, const vis::VulkanDevice& device, const DescriptorSet0Config* config = nullptr);

class DescriptorSet0 : public vis::VulkanDescriptorSet {
 public:
  /// Updates all descriptors in this set with the given values.
  void Update(
      const VkDescriptorBufferInfo* VertexUBO,
      const VkDescriptorBufferInfo* DeformationStateStorageBuffer);
  
  /// Updates the descriptor "VertexUBO" (binding 0) in this set with the given value.
  void UpdateVertexUBO(
      const VkDescriptorBufferInfo* VertexUBO);
  
  /// Updates the descriptor "DeformationStateStorageBuffer" (binding 1) in this set with the given value.
  void UpdateDeformationStateStorageBuffer(
      const VkDescriptorBufferInfo* DeformationStateStorageBuffer);
};

}
